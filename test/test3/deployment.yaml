apiVersion: apps/v1
kind: Deployment
metadata:
  # create Deployment named server-deployment
  name: frontend-deployment
spec:
  # create three replicated Pods
  replicas: 1
  # finds which files Pods to manage
  # select on one label defined in Pod template
  selector:
    matchLabels:
      app: my-deployment-2
  # pod template
  # pods are labeled app: server
  # run server image if not local
  template:
    metadata:
      labels:
        app: my-deployment-2
    spec:
      containers:
      - name: frontend
        image: frontend:v1
        ports:
          - containerPort: 8081
---
apiVersion: apps/v1
kind: Deployment
metadata:
  # create Deployment named server-deployment
  name: backend-deployment
spec:
  # create three replicated Pods
  replicas: 1
  # finds which files Pods to manage
  # select on one label defined in Pod template
  selector:
    matchLabels:
      app: my-deployment-2
  # pod template
  # pods are labeled app: server
  # run server image if not local
  template:
    metadata:
      labels:
        app: my-deployment-2
    spec:
      containers:
      - name: backend
        image: backend:v1
        ports:
          - containerPort: 3001
---
kind: Service
apiVersion: v1
metadata:
  name: my-service-2
  labels:
    run: my-service-2
spec:
  type: LoadBalancer
  selector:
    app: my-deployment-2
  ports:
  - name: frontend
    protocol: TCP
    port: 8081
    targetPort: 8081
  - name: backend
    protocol: TCP
    port: 3001
    targetPort: 3001
    nodePort: 30025
